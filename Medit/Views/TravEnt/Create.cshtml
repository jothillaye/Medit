@model Medit.TravEnt

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>TravEnt</legend>
        <div class="button">
            @Html.LabelFor(model => model.Interlocuteur)
        </div>
        <div class="button">
            @Html.RadioButton("Interlocuteur", 0) Non
            @Html.RadioButton("Interlocuteur", 1) Oui
            @Html.ValidationMessageFor(model => model.Interlocuteur)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Id_Travailleur)
        </div>
        <input type="text" id="filter_travailleur" />
        <div class="editor-field">
            @Html.ListBox("Id_Travailleur")
            @Html.ValidationMessageFor(model => model.Id_Travailleur)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateEntree)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateEntree)
            @Html.ValidationMessageFor(model => model.DateEntree)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateSortie)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateSortie)
            @Html.ValidationMessageFor(model => model.DateSortie)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Code_Profession)
        </div>
        <div class="editor-field">
            @Html.DropDownList("Code_Profession")
            @Html.ValidationMessageFor(model => model.Code_Profession)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Numero_Entreprise)
        </div>
        <input type="text" id="filter_entreprise" />
        <div class="editor-field">
            @Html.ListBox("Numero_Entreprise")
            @Html.ValidationMessageFor(model => model.Numero_Entreprise)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Id_Langue)
        </div>
        <div class="editor-field">
            @Html.DropDownList("Id_Langue", null, new { @disabled = "disabled" })
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")

    <script>
        $('input[type=datetime]').datepicker({ dateFormat: 'dd-mm-yy', firstDay: 1 });

        $('#Numero_Entreprise').on("change", function () {
            var id_entreprise = $('option:selected', this).val();

            $.ajax({
                url: '/TravEnt/TranslateProfessions/' + id_entreprise.toString(),
                type: 'GET',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                    if (jQuery.isEmptyObject(result.langue) == false) {
                        $('#Id_Langue').filter(function () {
                            return $(this).val(result.langue[0].Id_Langue);
                        }).prop('selected', true);
                    }
                        
                    $('#Code_Profession').empty();
                    var professions = result.professions;
                    $.each(professions, function () {
                        $('<option />', {
                            val: this.Code,
                            text: this.Denomination
                        }).appendTo($('#Code_Profession'));
                    });
                }
            });                
        });

        $('#filter_entreprise').on("keyup", function() {
            var filter = $('#filter_entreprise').val();
            $.ajax({
                url: '/TravEnt/FilterEntreprises',
                data: '{"filter":"' + filter + '"}',
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                    var entreprises = result.filteredEntreprises;
                    $('#Numero_Entreprise').empty();
                    $.each(entreprises, function () {
                        $('<option />', {
                            val: this.Numero_Entreprise,
                            text: this.Denomination
                        }).appendTo($('#Numero_Entreprise'));
                    });
                }
            });
        });

        $('#filter_travailleur').on("keyup", function () {
            var filter = $('#filter_travailleur').val();
            $.ajax({
                url: '/TravEnt/FilterTravailleurs',
                data: '{"filter":"' + filter + '"}',
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                    var travailleurs = result.filteredTravailleurs;
                    $('#Id_Travailleur').empty();
                    $.each(travailleurs, function () {
                        $('<option />', {
                            val: this.Id_Travailleur,
                            text: (this.Prenom + ' ' + this.Nom)
                        }).appendTo($('#Id_Travailleur'));
                    });
                }
            });
        });
    </script>
}
